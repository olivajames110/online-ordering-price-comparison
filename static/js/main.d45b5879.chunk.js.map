{"version":3,"sources":["priceCalc/components/slider/slider.js","priceCalc/components/competitors/competitors.js","priceCalc/priceCalc.js","App.js","serviceWorker.js","index.js"],"names":["Slider","props","fill","dynamicNumber","maxAmt","title","description","minAmt","defaultValue","numberValueDesc","handleNumberUpdate","ex","className","onChange","updateFillAmt","isPercent","type","min","max","style","background","Competitors","convertFeeNumber","num","console","log","companiesList","this","companies","map","company","name","fee","specialInformation","color","annualCost","toLocaleString","Component","PriceCalc","state","pricePerOrder","ordersPerWeek","updatePricePerOrder","e","target","value","setState","handleAnnualCost","updateOrdersPerWeek","price","quantity","weeks","Math","round","class","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d45b5879.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './slider.css';\r\n\r\nconst Slider = (props) => {\r\n\tconst fill = props.dynamicNumber / props.maxAmt * 100;\r\n\tconst {\r\n\t\ttitle,\r\n\t\tdescription,\r\n\t\tminAmt,\r\n\t\tmaxAmt,\r\n\t\tdefaultValue,\r\n\t\tnumberValueDesc,\r\n\t\tdynamicNumber,\r\n\t\thandleNumberUpdate\r\n\t} = props;\r\n\tconst ex = `linear-gradient(90deg, var(--priceCalcSliderGreen) ${fill}%, rgb(215, 220, 223) ${fill}%)`;\r\n\r\n\treturn (\r\n\t\t<div className=\"range-slider-wrapper\">\r\n\t\t\t<div className=\"upper-portion\">\r\n\t\t\t\t<div className=\"range-description\">\r\n\t\t\t\t\t<h2>{title}</h2>\r\n\t\t\t\t\t<span>{description}</span>\r\n\t\t\t\t\t<span onChange={props.updateFillAmt} className=\"dynamic-number-value\">\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{props.isPercent ? '$' : null}\r\n\t\t\t\t\t\t\t{dynamicNumber}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span>{numberValueDesc}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* <span id=\"rs-bullet--price\" class=\"rs-label\" style=\"left: 43.61%;\">$98</span> */}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"input-slider-portion____\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tonChange={handleNumberUpdate}\r\n\t\t\t\t\tclassName=\"range-slider__range\"\r\n\t\t\t\t\ttype=\"range\"\r\n\t\t\t\t\tdefaultValue={defaultValue}\r\n\t\t\t\t\tmin={minAmt}\r\n\t\t\t\t\tmax={maxAmt}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tbackground : ex\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<div className=\"box-minmax-key\">\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t{props.isPercent ? '$' : null}\r\n\t\t\t\t\t\t{minAmt}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t{props.isPercent ? '$' : null}\r\n\t\t\t\t\t\t{maxAmt}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Slider;\r\n","import React, { Component } from 'react';\r\nimport './competitors';\r\n\r\nexport default class Competitors extends Component {\r\n\tconvertFeeNumber = (num, isPercent) => {\r\n\t\tconsole.log(num, isPercent);\r\n\t\tif (isPercent) {\r\n\t\t\treturn `${num * 100}%`;\r\n\t\t} else {\r\n\t\t\treturn `$${num}`;\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { companies } = this.props;\r\n\r\n\t\tconst companiesList = companies.map((company) => {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"competitor-container\">\r\n\t\t\t\t\t<span>{company.name}</span>\r\n\t\t\t\t\t<span className=\"competitor-commission-amt\">\r\n\t\t\t\t\t\t{this.convertFeeNumber(company.fee, company.isPercent)}\r\n\t\t\t\t\t\t{company.specialInformation ? (\r\n\t\t\t\t\t\t\t<span className=\"special-information\">{company.specialInformation}</span>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span style={{ color: 'var(--priceCalcCompRed)' }}>${company.annualCost.toLocaleString()}</span>\r\n\t\t\t\t\t<span style={{ color: 'var(--priceCalcCompGreen)' }}>\r\n\t\t\t\t\t\t${company.annualCost - 2388 <= 0 ? 0 : (company.annualCost - 2388).toLocaleString()}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"competitor-wrapper\">\r\n\t\t\t\t<div className=\"companies\">\r\n\t\t\t\t\t<div className=\"companies-table-title\">\r\n\t\t\t\t\t\t<h3>Online Ordering Company</h3>\r\n\t\t\t\t\t\t<h3>Per Order Fee</h3>\r\n\t\t\t\t\t\t<h3>Annual Cost From Fees</h3>\r\n\t\t\t\t\t\t<h3>Savings With Ordereze</h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{companiesList}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n// <div id=\"grubhub\" className=\"competitor-container\">\r\n// <span className=\"competitor-company \">Grubhub</span>\r\n// <span className=\"competitor-commission-amt\" />\r\n// <span id=\"grubhub-competitor\" className=\"competitor-price-amt competitor-red\">\r\n//    $479,024\r\n// </span>\r\n// <span id=\"ordereze-competitor\" className=\"competitor-price-amt competitor-green\">\r\n//    $2,388\r\n// </span>\r\n// </div>\r\n\r\n// <div id=\"eatstreet\" className=\"competitor-container\">\r\n// <span className=\"competitor-company \">Eatstreet</span>\r\n// <span className=\"competitor-commission-amt\" />\r\n// <span id=\"eatstreet-competitor\" className=\"competitor-price-amt competitor-red\">\r\n//    $287,414\r\n// </span>\r\n// <span id=\"ordereze-competitor\" className=\"competitor-price-amt competitor-green\">\r\n//    $2,388\r\n// </span>\r\n// </div>\r\n// <div id=\"chownow\" className=\"competitor-container\">\r\n// <span className=\"competitor-company \">Chownow</span>\r\n// <span className=\"competitor-commission-amt\"> $119</span>\r\n// <span id=\"chownow-competitor\" className=\"competitor-price-amt competitor-red\">\r\n//    $1,428\r\n// </span>\r\n// <span id=\"ordereze-competitor\" className=\"competitor-price-amt competitor-green\">\r\n//    $2,388\r\n// </span>\r\n// </div>\r\n// <div id=\"menufy\" className=\"competitor-container\">\r\n// <span className=\"competitor-company \">Menufy</span>\r\n// <span className=\"competitor-commission-amt\">$1.50</span>\r\n// <span id=\"menufy-competitor\" className=\"competitor-price-amt competitor-red\">\r\n//    $36,660\r\n// </span>\r\n// <span id=\"ordereze-competitor\" className=\"competitor-price-amt competitor-green\">\r\n//    $2,388\r\n// </span>\r\n// </div>\r\n// <div id=\"uber-eats\" className=\"competitor-container\">\r\n// <span className=\"competitor-company \">Uber Eats</span>\r\n// <span className=\"competitor-commission-amt\">30%</span>\r\n// <span id=\"uber-eats-competitor\" className=\"competitor-price-amt competitor-red\">\r\n//    $718,536\r\n// </span>\r\n// <span id=\"ordereze-competitor\" className=\"competitor-price-amt competitor-green\">\r\n//    $2,388\r\n// </span>\r\n// </div>\r\n// <div id=\"door-dash\" className=\"competitor-container\">\r\n// <span className=\"competitor-company \">Door Dash</span>\r\n// <span className=\"competitor-commission-amt\">20%</span>\r\n// <span id=\"door-dash-competitor\" className=\"competitor-price-amt competitor-red\">\r\n//    $479,024\r\n// </span>\r\n// <span id=\"ordereze-competitor\" className=\"competitor-price-amt competitor-green\">\r\n//    $2,388\r\n// </span>\r\n// </div>\r\n// <div id=\"ordereze\" className=\"competitor-container\">\r\n// <span className=\"competitor-company competitor-green\">Ordereze</span>\r\n// <span className=\"competitor-commission-amt\">5%</span>\r\n// <span id=\"ordereze-competitor\" className=\"competitor-price-amt competitor-green\">\r\n//    $2,388\r\n// </span>\r\n// <span id=\"ordereze-competitor\" className=\"competitor-price-amt competitor-green\">\r\n//    $2,388\r\n// </span>\r\n// </div>\r\n","import React, { Component, Fragment } from 'react';\r\nimport Slider from './components/slider/slider';\r\nimport Competitors from './components/competitors/competitors';\r\nimport './css/priceCalcMain.css';\r\n\r\nclass PriceCalc extends Component {\r\n\tstate = {\r\n\t\tpricePerOrder : 100,\r\n\t\tordersPerWeek : 50,\r\n\t\tcompanies     : [\r\n\t\t\t{ name: 'GrubHub', fee: null, specialInformation: null, isPercent: null, annualCost: 0 },\r\n\t\t\t{ name: 'Eat Street', fee: null, specialInformation: null, isPercent: null, annualCost: 0 },\r\n\t\t\t{ name: 'Menufy', fee: null, specialInformation: null, isPercent: null, annualCost: 0 },\r\n\t\t\t{ name: 'Uber Eats', fee: null, specialInformation: null, isPercent: null, annualCost: 0 },\r\n\t\t\t{ name: 'Door Dash', fee: null, specialInformation: null, isPercent: null, annualCost: 0 },\r\n\t\t\t{ name: 'Slice', fee: null, specialInformation: null, isPercent: null, annualCost: 0 }\r\n\t\t]\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.handleAnnualCost(this.state.pricePerOrder, this.state.ordersPerWeek);\r\n\t}\r\n\r\n\tupdatePricePerOrder = (e) => {\r\n\t\tlet num = e.target.value;\r\n\t\tthis.setState({\r\n\t\t\tpricePerOrder : e.target.value\r\n\t\t});\r\n\r\n\t\tthis.handleAnnualCost(num, this.state.ordersPerWeek);\r\n\t};\r\n\r\n\tupdateOrdersPerWeek = (e) => {\r\n\t\tlet num = e.target.value;\r\n\r\n\t\tthis.setState({\r\n\t\t\tordersPerWeek : e.target.value\r\n\t\t});\r\n\r\n\t\tthis.handleAnnualCost(this.state.pricePerOrder, num);\r\n\t};\r\n\r\n\thandleAnnualCost = (price, quantity) => {\r\n\t\tlet weeks = 52;\r\n\t\tthis.setState({\r\n\t\t\tcompanies : [\r\n\t\t\t\t{\r\n\t\t\t\t\tname               : 'GrubHub',\r\n\t\t\t\t\tfee                : 0.2,\r\n\t\t\t\t\tspecialInformation : false,\r\n\t\t\t\t\tisPercent          : true,\r\n\t\t\t\t\tannualCost         : weeks * 0.2 * price * quantity\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname               : 'Eat Street',\r\n\t\t\t\t\tfee                : 0.12,\r\n\t\t\t\t\tspecialInformation : false,\r\n\t\t\t\t\tisPercent          : true,\r\n\t\t\t\t\tannualCost         : weeks * 0.12 * price * quantity\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tname               : 'Menufy',\r\n\t\t\t\t\tfee                : 1.5,\r\n\t\t\t\t\tspecialInformation : 'Passed To Customer',\r\n\t\t\t\t\tisPercent          : false,\r\n\t\t\t\t\tannualCost         : 1.5 * weeks * quantity\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname               : 'Uber Eats',\r\n\t\t\t\t\tfee                : 0.3,\r\n\t\t\t\t\tspecialInformation : false,\r\n\t\t\t\t\tisPercent          : true,\r\n\t\t\t\t\tannualCost         : weeks * 0.3 * price * quantity\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname               : 'Door Dash',\r\n\t\t\t\t\tfee                : 0.2,\r\n\t\t\t\t\tspecialInformation : false,\r\n\t\t\t\t\tisPercent          : true,\r\n\t\t\t\t\tannualCost         : weeks * 0.2 * price * quantity\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname               : 'Slice',\r\n\t\t\t\t\tfee                : 1.95,\r\n\t\t\t\t\tspecialInformation : false,\r\n\t\t\t\t\tisPercent          : false,\r\n\t\t\t\t\tannualCost         : Math.round(1.95 * weeks * quantity)\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<div class=\"range-widget-container\">\r\n\t\t\t\t\t<div className=\"bg\" />\r\n\t\t\t\t\t<div className=\"range-widget-container\">\r\n\t\t\t\t\t\t<div className=\"intro-header\">\r\n\t\t\t\t\t\t\t<h1>Online Ordering Commission Calculator</h1>\r\n\t\t\t\t\t\t\t<h3 className=\"description\">\r\n\t\t\t\t\t\t\t\tHow much money are you giving away to various third-party online ordering companies?\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"range-container\">\r\n\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\ttitle={'Order Price'}\r\n\t\t\t\t\t\t\t\tdescription={'The average price of an order placed online is about'}\r\n\t\t\t\t\t\t\t\tminAmt={'0'}\r\n\t\t\t\t\t\t\t\tmaxAmt={'200'}\r\n\t\t\t\t\t\t\t\tdefaultValue={this.state.pricePerOrder}\r\n\t\t\t\t\t\t\t\tnumberValueDesc={'per order.'}\r\n\t\t\t\t\t\t\t\tdynamicNumber={this.state.pricePerOrder}\r\n\t\t\t\t\t\t\t\thandleNumberUpdate={this.updatePricePerOrder}\r\n\t\t\t\t\t\t\t\tisPercent={true}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\ttitle={'Weekly Order Amount'}\r\n\t\t\t\t\t\t\t\tdescription={'In one week, I typically receive an average of about'}\r\n\t\t\t\t\t\t\t\tminAmt={'0'}\r\n\t\t\t\t\t\t\t\tmaxAmt={'500'}\r\n\t\t\t\t\t\t\t\tdefaultValue={this.state.ordersPerWeek}\r\n\t\t\t\t\t\t\t\tnumberValueDesc={'online orders.'}\r\n\t\t\t\t\t\t\t\tdynamicNumber={this.state.ordersPerWeek}\r\n\t\t\t\t\t\t\t\thandleNumberUpdate={this.updateOrdersPerWeek}\r\n\t\t\t\t\t\t\t\tisPercent={false}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<Competitors companies={this.state.companies} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PriceCalc;\r\n","import React from 'react';\nimport PriceCalc from './priceCalc/priceCalc';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <PriceCalc />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}